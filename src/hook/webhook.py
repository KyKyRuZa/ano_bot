import asyncio
import logging
from aiogram import Bot
from config import (
    WEBHOOK_URL, 
    WEBHOOK_PATH, 
    WEBHOOK_INTERVAL, 
    ADMIN_CHAT_ID
)

logger = logging.getLogger(__name__)

class WebhookManager:
    def __init__(self, bot: Bot):
        self.bot = bot
        self.logger = logging.getLogger(__name__)

    async def setup_webhook(self):
        """
        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ —Å Telegram
        """
        try:
            await self.bot.delete_webhook(drop_pending_updates=True)
            self.logger.info("üßπ –°—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫ —É–¥–∞–ª—ë–Ω")

            await self.bot.set_webhook(
                url=WEBHOOK_URL,
                allowed_updates=None,  # –ú–æ–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å —Ç–∏–ø—ã –∞–ø–¥–µ–π—Ç–æ–≤
                drop_pending_updates=True
            )
            self.logger.info(f"‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
            return True
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}", exc_info=True)
            return False

    async def monitor_webhook(self, interval=None):
        """
        –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–µ–±—Ö—É–∫–∞
        """
        interval = interval or WEBHOOK_INTERVAL
        while True:
            try:
                info = await self.bot.get_webhook_info()
                current_url = info.url
                
                if current_url != WEBHOOK_URL:
                    self.logger.warning(f"‚ö†Ô∏è –í–µ–±—Ö—É–∫ –∏–∑–º–µ–Ω—ë–Ω: {current_url} ‚â† {WEBHOOK_URL}")
                    success = await self.setup_webhook()
                    
                    if success:
                        self.logger.info("üîÑ –í–µ–±—Ö—É–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                        await self.send_alert_to_admin(f"üü¢ –í–µ–±—Ö—É–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
                    else:
                        self.logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫")
                else:
                    self.logger.debug(f"üîó –í–µ–±—Ö—É–∫ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {current_url}")
            
            except Exception as e:
                self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}", exc_info=True)
            
            await asyncio.sleep(interval)

    async def send_alert_to_admin(self, message_text):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        """
        try:
            await self.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message_text)
        except Exception as e:
            self.logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")
